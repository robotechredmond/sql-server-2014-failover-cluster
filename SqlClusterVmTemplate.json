{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {

    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique Prefix for each VM Name"
      }
    },

    "availabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "Name of Availability Set for SQL VMs"
      }
    },

    "vmImagePublisher": {
      "type": "string",
      "metadata": {
        "description": "VM Image Publisher"
      },
      "defaultValue": "MicrosoftSQLServer"
    },

    "vmImageOffer": {
      "type": "string",
      "metadata": {
        "description": "VM Image Offer"
      },
      "defaultValue": "SQL2014SP1-WS2012R2"
    },

    "vmImageSKU": {
      "type": "string",
      "metadata": {
        "description": "VM Image SKU"
      },
      "defaultValue": "Standard"
    },

    "vmImageVersion": {
      "type": "string",
      "metadata": {
        "description": "VM Image Version"
      },
      "defaultValue": "latest"
    },

    "storageAccount": {
      "type": "string",
      "metadata": {
        "description": "Storage Account Name for SQL VM disks"
      }
    },

    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account Type for SQL VM disks"
      }
    },

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for VMs and AD domain"
      }
    },

    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for VMs and Domain"
      }
    },

    "location": {
      "type": "string",
      "allowedValues": [
        "West US",
        "East US",
        "East US 2",
        "Central US",
        "South Central US",
        "North Central US",
        "North Europe",
        "West Europe",
        "East Asia",
        "Southeast Asia",
        "Japan East",
        "Japan West",
        "Brazil South",
        "Australia East",
        "Australia Southeast",
        "Central India",
        "South India",
        "West India"
      ],
      "metadata": {
        "description": "Azure Region in which to deploy resources"
      }
    },

    "vmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14"
      ],
      "metadata": {
        "description": "Size of SQL VM instances"
      }
    },

    "nicSubnetUri": {
      "type": "string",
      "metadata": {
        "description": "Subnet ID for NICs"
      }
    },

    "lbSubnetUri": {
      "type": "string",
      "metadata": {
        "description": "Subnet ID for ILB"
      }
    },

    "lbName": {
      "type": "string",
      "metadata": {
        "description": "Name of ILB"
      }
    },

    "sqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP Address for SQL ILB"
      }
    }

  },

  "variables": {

    "apiVersion": "2015-01-01",
    "apiVersionNetworks": "2015-06-15",
    "apiVersionVirtualMachines": "2015-06-15",
    "apiVersionVMExtensions": "2015-06-15",
    "apiVersionStorage": "2015-06-15",

    "lbFE": "[concat(parameters('lbName'),'fe')]",
    "lbBE": "[concat(parameters('lbName'),'be')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('lbName'))]",
    "lbFEConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/',variables('lbFE'))]",
    "lbBEAddressPoolID": "[concat(variables('lbID'),'/backendAddressPools/',variables('lbBE'))]",
    "lbProbeName": "[concat(parameters('lbName'),'probe')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/',variables('lbProbeName'))]",

    "sqlNicName": "[concat(parameters('vmNamePrefix'),'-nic')]",

    "sqlListenerName": "[concat(parameters('vmNamePrefix'),'c')]",

    "vmContainerName": "vhds"

  },

  "resources": [

    {
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(parameters('storageAccount'), copyindex())]",
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
				"name": "storageAccountLoop",
				"count": 2
			},
			"location": "[parameters('location')]",
			"properties": {
			"accountType": "[parameters('storageAccountType')]"
			}
		},

    {
			"apiVersion": "[variables('apiVersionNetworks')]",
			"name": "[parameters('lbName')]",
			"type": "Microsoft.Network/loadBalancers",
			"location": "[parameters('location')]",
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('lbFE')]",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress" :"[parameters('sqlLBIPAddress')]",
							"subnet": {
								"id": "[parameters('lbSubnetUri')]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('lbBE')]"
					}
				],
				"loadBalancingRules": [
					{
						"name": "[variables('sqlListenerName')]",
						"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('lbFEConfigID')]"
						},
						"backendAddressPool": {
							"id": "[variables('lbBEAddressPoolID')]"
						},
						"probe": {
							"id": "[variables('lbProbeID')]"
						},
  						"protocol": "tcp",
  						"frontendPort": 1433,
  						"backendPort": 1433,
  						"enableFloatingIP": true
						}
					}
				],
				"probes": [
					{
						"name": "[variables('lbProbeName')]",
						"properties": {
							"protocol": "tcp",
							"port": 59999,
							"intervalInSeconds": "5",
							"numberOfProbes": "2"
						}
					}
				]
			}
		},

    {
			"name": "[concat(variables('sqlNicName'), copyindex())]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[parameters('location')]",
			"apiVersion": "[variables('apiVersionNetworks')]",
			"copy": {
				"name": "nicLoop",
				"count": 2
			},
			"dependsOn": [
				"[concat('Microsoft.Network/loadBalancers/',parameters('lbName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[parameters('nicSubnetUri')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id":"[variables('lbBEAddressPoolID')]"
								}
							]
						}
					}
				]
			}
		},

    {
			"apiVersion": "[variables('apiVersionVirtualMachines')]",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(parameters('vmNamePrefix'), copyindex())]",
			"location": "[parameters('location')]",
			"copy": {
				"name": "virtualMachineLoop",
				"count": 2
			},
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',concat(parameters('storageAccount'),  copyindex()))]",
				"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlNicName'), copyindex()))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
				},
				"osProfile": {
					"computerName": "[concat(parameters('vmNamePrefix'), copyindex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('vmImagePublisher')]",
						"offer": "[parameters('vmImageOffer')]",
						"sku": "[parameters('vmImageSKU')]",
						"version": "[parameters('vmImageVersion')]"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('storageAccount'),copyindex(), '.blob.core.windows.net/',variables('vmContainerName'),'/', parameters('vmNamePrefix'), copyindex(),'-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlNicName'), copyindex()))]"
						}
					]
				}
			}
		}
  ],
    "outputs": {
    }
}
