{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "sqlClusterPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique prefix value used to generate names for Storage Accounts, VM's, DNS names, Cluster name and Azure resource names. 8-char max, lowercase alpha"
      }
    },

    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Type of new Storage Accounts (Standard_LRS, Standard_GRS, Standard_RAGRS or Premium_LRS) to be created to store VM disks"
      },
      "defaultValue": "Standard_LRS"
    },

    "sqlVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14"
      ],
      "metadata": {
        "description": "Size of the SQL VM instances to be created"
      },
      "defaultValue": "Standard_D3"
    },

    "sqlWitnessVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14"
      ],
      "metadata": {
        "description": "Size of the Witness VM instance to be created"
      },
      "defaultValue": "Standard_D1"
    },

    "sqlServerServiceAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "Service account name for SQL Server services"
      }
    },

    "sqlServerServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Service account password for SQL Server services"
      }
    },

    "existingVirtualNetworkId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the existing VNET. You can find the Resource ID for the VNET on the Properties blade of the VNET."
      }
    },

    "existingSqlSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing subnet in the existing VNET to which the SQL & Witness VMs should be deployed"
      },
      "defaultValue": "default"
    },

    "existingDomainName": {
      "type": "string",
      "metadata": {
        "description": "DNS domain name for existing Active Directory domain"
      },
      "defaultValue": "contoso.com"
    },

    "existingAdPDCVMName": {
      "type": "string",
      "metadata": {
        "description": "Computer name of the existing Primary AD domain controller & DNS server"
      }
    },

    "existingPrimaryAdIpAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address of the existing Primary AD domain controller & DNS server"
      },
      "defaultValue": "10.0.0.4"
    },

    "existingSecondaryAdIpAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address of the existing Secondary AD domain controller & DNS server"
      },
      "defaultValue": "10.0.0.5"
    },

    "sqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address of ILB for the new SQL Server AlwaysOn listener to be created"
      },
      "defaultValue": "10.0.0.10"
    },

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Name of an existing Admin user account for the Active Directory domain"
      }
    },

    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the existing Admin user account for the Active Directory domain"
      }
    },

    "location": {
      "type": "string",
      "allowedValues": [
        "West US",
        "East US",
        "East US 2",
        "Central US",
        "South Central US",
        "North Central US",
        "North Europe",
        "West Europe",
        "East Asia",
        "Southeast Asia",
        "Japan East",
        "Japan West",
        "Brazil South",
        "Australia East",
        "Australia Southeast",
        "Central India",
        "South India",
        "West India"
      ],
      "metadata": {
        "description": "Region in which to deploy the new resources"
      }
    },

    "assetLocation": {
      "type": "string",
      "metadata": {
        "description": "Location of resources upon which this template is dependent, such as nested templates and DSC modules"
      },
      "defaultValue": "https://raw.githubusercontent.com/robotechredmond/sql-server-2014-failover-cluster/master"
    }

  },

  "variables": {

    "apiVersion": "2015-01-01",
    "apiVersionNetworks": "2015-06-15",
    "apiVersionVirtualMachines": "2015-06-15",
    "apiVersionVMExtensions": "2015-06-15",
    "apiVersionStorage": "2015-06-15",

    "sqlSubnetRef": "[concat(parameters('existingVirtualNetworkId'),'/subnets/',parameters('existingSqlSubnetName'))]",

    "sqlStorageName": "[concat(parameters('sqlClusterPrefix'),'sqlvmstor')]",
    "sqlClusterTemplateURL": "[concat(parameters('assetLocation'),'/SqlClusterVmTemplate.json')]",
    "deploySqlClusterVms": "deploySqlClusterVms",
    "deploySqlClusterVmsId": "[concat('Microsoft.Resources/deployments/', variables('deploySqlClusterVms'))]",

    "sqlWitnessTemplateURL": "[concat(parameters('assetLocation'),'/SqlWitnessVmTemplate.json')]",
    "sqlWitnessStorageName": "[concat(parameters('newStorageAccountNamePrefix'),'fswvmstor')]",
    "deploySqlWitnessVm": "deploySqlWitnessVms",
    "deploySqlWitnessVmId": "[concat('Microsoft.Resources/deployments/', variables('deploySqlWitnessVm'))]",

    "deploySqlWitnessShare": "deploySqlWitnessShare",
    "deploySqlWitnessShareId": "[concat('Microsoft.Resources/deployments/', variables('deploySqlWitnessShare'))]",
    "deploySqlWitnessShareTemplateUrl": "[concat(parameters('assetLocation'),'/DeploySqlWitnessShare.json')]",
    "sqlWitnessSharePath" : "[concat(parameters('sqlClusterPrefix'),'-fswshare')]",
    "sqlWitnessVmNamePrefix": "[concat(parameters('sqlClusterPrefix'),'-fswvm')]",
    "sqlwVMName": "[concat(variables('sqlWitnessVmNamePrefix'),'0')]",

    "updateSQLWNic": "updateSQLWNic",
    "updateSQLWNicId": "[concat('Microsoft.Resources/deployments/', variables('updateSQLWNic'))]",
    "sqlwNicName": "[concat(parameters('sqlwVMName'),'-nic0')]",
    "nicTemplateURL": "[concat(parameters('assetLocation'),'/nic.json')]",

    "sqlClusterVmNamePrefix": "[concat(parameters('sqlClusterPrefix'),'-sqlvm')]",
    "sqlCVMName1": "[concat(variables('sqlClusterVmNamePrefix'),'0')]",
    "sqlCVMName2": "[concat(variables('sqlClusterVmNamePrefix'),'1')]",

    "updateSQLCNic1": "updateSQLCNic1",
    "updateSQLCNic1Id": "[concat('Microsoft.Resources/deployments/', variables('updateSQLCNic1'))]",
    "sqlNicName1": "[concat(variables('sqlCVMName1'),'-nic0')]",

    "updateSQLCNic2": "updateSQLCNic2",
    "updateSQLCNic2Id": "[concat('Microsoft.Resources/deployments/', variables('updateSQLCNic2'))]",
    "sqlNicName2":  "[concat(variables('sqlCVMName2'),'-nic0')]",

    "lbName": "[concat(parameters('sqlClusterPrefix'),'-ilb')]",
    "lbFE": "[concat(variables('lbName'),'fe')]",
    "lbBE": "[concat(variables('lbName'),'be')]",
    "lbID":"[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "lbFEConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/',variables('lbFE'))]",
    "lbBEAddressPoolID": "[concat(variables('lbID'),'/backendAddressPools/',variables('lbBE'))]",

    "deploySqlAlwaysOnFCI": "deploySqlAlwaysOnFCI",
    "deploySqlAlwaysOnFCITemplateUrl": "[concat(parameters('assetLocation'),'/deploySqlAlwaysOnFCI.json')]",

    "sqlListenerName": "[concat(parameters('sqlClusterVmNamePrefix'),'c')]",

    "sqlAvailabilitySetName": "[concat(parameters('sqlClusterPrefix'),'-sqlas')]",

    "fileStorageName": "[concat(parameters('sqlClusterPrefix'),'sqlfilestor0')]",
    "fileStorageAccountType": "Standard_LRS"

  },

  "resources": [

    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('sqlAvailabilitySetName')]",
      "apiVersion": "[variables('apiVersionNetworks')]",
      "location": "[parameters('location')]"
    },

    {
      "name": "[variables('deploySqlClusterVms')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sqlClusterTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": { "value": "[parameters('location')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "storageAccount": { "value": "[variables('SqlStorageName')]" },
          "storageAccountType": { "value": "[parameters('storageAccountType')]" },
          "nicSubnetUri": { "value": "[variables('sqlSubnetRef')]" },
          "lbName": { "value": "[variables('lbName')]" },
          "lbSubnetUri": { "value": "[variables('sqlSubnetRef')]" },
          "vmNamePrefix": { "value": "[variables('sqlClusterVmNamePrefix')]" },
          "sqlLBIPAddress": { "value": "[parameters('sqlLBIPAddress')]" },
          "vmSize": { "value": "[parameters('sqlVMSize')]" },
          "availabilitySetName": { "value": "[variables('sqlAvailabilitySetName')]" }
        }
      }
    },

    {
      "name": "[variables('deploySqlWitnessVm')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sqlWitnessTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": { "value": "[parameters('location')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "storageAccount": { "value": "[variables('sqlWitnessStorageName')]" },
          "subnetUri": { "value": "[variables('sqlSubnetRef')]" },
          "storageAccountType": { "value": "[parameters('storageAccountType')]" },
          "vmNamePrefix": { "value": "[variables('sqlWitnessVmNamePrefix')]" },
          "vmSize": { "value": "[parameters('sqlWitnessVMSize')]" },
          "availabilitySetName": { "value": "[variables('sqlAvailabilitySetName')]" }
        }
      }
    },

    {
      "name": "[variables('updateSQLWNic')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[variables('deploySqlWitnessVmId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "nicName": {
            "value": "[variables('sqlwNicName')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('sqlSubnetRef')]"
                  }
                }
              }
            ]
          },
          "dnsServers": {
            "value": [ "[parameters('existingPrimaryAdIpAddress')]", "[parameters('existingSecondaryAdIpAddress')]" ]
          }

        }
      }
    },

    {
      "name": "[variables('updateSQLCNic1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[variables('deploySqlClusterVmsId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "nicName": {
            "value": "[variables('sqlNicName1')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('sqlSubnetRef')]"
                  },
                "loadBalancerBackendAddressPools": [
                  {
                    "id":"[variables('lbBEAddressPoolID')]"
                  }
		 ]
                }
              }
            ]
          },
          "dnsServers": {
            "value": [ "[parameters('existingPrimaryAdIpAddress')]", "[parameters('existingSecondaryAdIpAddress')]" ]
          }

        }
      }
    },

    {
      "name": "[variables('updateSQLCNic2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[variables('deploySqlClusterVmsId')]",
        "[variables('updateSQLCNic1Id')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "nicName": {
            "value": "[variables('sqlNicName2')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('sqlSubnetRef')]"
                  },
                "loadBalancerBackendAddressPools": [
                  {
                    "id":"[variables('lbBEAddressPoolID')]"
                  }
		 ]
                }
              }
            ]
          },
          "dnsServers": {
            "value": [ "[parameters('existingPrimaryAdIpAddress')]", "[parameters('existingSecondaryAdIpAddress')]" ]
          }

        }
      }
    },

    {
      "name": "[variables('deploySqlWitnessShare')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[variables('updateSQLWNicId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deploySqlWitnessShareTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlwVMName": { "value": "[variables('sqlwVMName')]" },
          "domainName": { "value": "[parameters('existingDomainName')]" },
          "location": { "value": "[parameters('location')]" },
          "sharePath": { "value": "[variables('sqlWitnessSharePath')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "assetLocation": { "value": "[parameters('assetLocation')]" }
        }
      }
    }

  ],

  "outputs": {
  }
}
